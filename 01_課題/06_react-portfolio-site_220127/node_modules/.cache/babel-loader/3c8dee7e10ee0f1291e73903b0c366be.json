{"ast":null,"code":"var _jsxFileName = \"/Users/daideguchi/Desktop/G's _Academy/\\u8AB2\\u984C/api_work/react-portfolio-site/src/components/Skills.jsx\",\n    _s = $RefreshSig$();\n\nimport Circle from \"react-circle\";\nimport { useEffect, useReducer } from \"react\";\nimport axios from \"axios\";\nimport { skillReducer, initialState, actionTypes } from \"../reducers/skillReducer\";\nimport { requestStates } from \"../constants\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Skills = () => {\n  _s();\n\n  const [state, dispatch] = useReducer(skillReducer, initialState);\n  useEffect(() => {\n    dispatch({\n      type: actionTypes.fetch\n    });\n    axios.get(\"https://api.github.com/users/daideguchi/repos\").then(response => {\n      const languageList = response.data.map(res => res.language);\n      const countedLanguageList = generateLanguageCountObj(languageList);\n      dispatch({\n        type: actionTypes.success,\n        payload: {\n          languageList: countedLanguageList\n        }\n      });\n    }).catch(() => {\n      dispatch({\n        type: actionTypes.error\n      });\n    });\n  }, []);\n\n  const generateLanguageCountObj = allLanguageList => {\n    const notNullLanguageList = allLanguageList.filter(language => language != null //null値を除外して新たな配列を取得\n    );\n    const uniqueLanguageList = [...new Set(notNullLanguageList)]; //重複を除外した配列を取得・・・new set()\n\n    return uniqueLanguageList.map(item => {\n      return {\n        language: item,\n        count: allLanguageList.filter(language => language === item).length\n      };\n    });\n  };\n\n  const converseCountToPercentage = count => {\n    if (count > 10) {\n      return 100;\n    }\n\n    return count * 10;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"skills\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"heading\",\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Skills\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"skills-container\",\n        children: [\" \", state.requestState === requestStates.loading && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"description\",\n          children: \"\\u53D6\\u5F97\\u4E2D...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this), state.requestState === requestStates.success && state.languageList.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"skill-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"description\",\n            children: /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: item.language\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Circle, {\n            animate: true,\n            progress: converseCountToPercentage(item.count)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 15\n        }, this)), state.requestState === requestStates.error && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"description\",\n          children: \"\\u30A8\\u30E9\\u30FC\\u304C\\u767A\\u751F\\u3057\\u307E\\u3057\\u305F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Skills, \"bgCdjuTOmPdSBRwTap80EFd9Y3U=\");\n\n_c = Skills;\n\nvar _c;\n\n$RefreshReg$(_c, \"Skills\");","map":{"version":3,"sources":["/Users/daideguchi/Desktop/G's _Academy/課題/api_work/react-portfolio-site/src/components/Skills.jsx"],"names":["Circle","useEffect","useReducer","axios","skillReducer","initialState","actionTypes","requestStates","Skills","state","dispatch","type","fetch","get","then","response","languageList","data","map","res","language","countedLanguageList","generateLanguageCountObj","success","payload","catch","error","allLanguageList","notNullLanguageList","filter","uniqueLanguageList","Set","item","count","length","converseCountToPercentage","requestState","loading","index"],"mappings":"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","sourcesContent":["import Circle from \"react-circle\";\n\nimport { useEffect, useReducer } from \"react\";\n\nimport axios from \"axios\";\nimport {\n  skillReducer,\n  initialState,\n  actionTypes,\n} from \"../reducers/skillReducer\";\nimport { requestStates } from \"../constants\";\n\nexport const Skills = () => {\n  const [state, dispatch] = useReducer(skillReducer, initialState);\n\n  useEffect(() => {\n    dispatch({ type: actionTypes.fetch });\n    axios\n      .get(\"https://api.github.com/users/daideguchi/repos\")\n      .then((response) => {\n        const languageList = response.data.map((res) => res.language);\n        const countedLanguageList = generateLanguageCountObj(languageList);\n        dispatch({\n          type: actionTypes.success,\n          payload: { languageList: countedLanguageList },\n        });\n      })\n      .catch(() => {\n        dispatch({ type: actionTypes.error });\n      });\n  }, []);\n\n  const generateLanguageCountObj = (allLanguageList) => {\n    const notNullLanguageList = allLanguageList.filter(\n      (language) => language != null //null値を除外して新たな配列を取得\n    );\n    const uniqueLanguageList = [...new Set(notNullLanguageList)]; //重複を除外した配列を取得・・・new set()\n    return uniqueLanguageList.map((item) => {\n      return {\n        language: item,\n        count: allLanguageList.filter((language) => language === item).length,\n      };\n    });\n  };\n  \n    \n     const converseCountToPercentage = (count) => {\n       if (count > 10) {\n         return 100;\n       }\n       return count * 10;\n     };\n\n  return (\n    <div id=\"skills\">\n      <div className=\"container\">\n        <div className=\"heading\">\n          <h2>Skills</h2>\n        </div>\n        <div className=\"skills-container\">\n          {\" \"}\n          {state.requestState === requestStates.loading && (\n            <p className=\"description\">取得中...</p>\n          )}\n          {state.requestState === requestStates.success &&\n            state.languageList.map((item, index) => (\n              <div className=\"skill-item\" key={index}>\n                <p className=\"description\">\n                  <strong>{item.language}</strong>\n                </p>\n                <Circle\n                  animate\n                  progress={converseCountToPercentage(item.count)}\n                />\n              </div>\n            ))}\n          {state.requestState === requestStates.error && (\n            <p className=\"description\">エラーが発生しました</p>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}