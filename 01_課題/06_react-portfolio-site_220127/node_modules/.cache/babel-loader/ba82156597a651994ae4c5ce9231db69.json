{"ast":null,"code":"var _jsxFileName = \"/Users/daideguchi/Desktop/G's _Academy/\\u8AB2\\u984C/api_work/react-portfolio-site/src/components/Skills.jsx\",\n    _s = $RefreshSig$();\n\nimport Circle from \"react-circle\";\nimport { requestStates } from \"../constants\";\nimport { useSkills } from \"../customHooks/useSkills\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Skills = () => {\n  _s();\n\n  const [sortedLanguageList, fetchRequestState, converseCountToPercentage] = useSkills();\n  useEffect(() => {\n    dispatch({\n      type: actionTypes.fetch\n    });\n    axios.get(\"https://api.github.com/users/daideguchi/repos\").then(response => {\n      const languageList = response.data.map(res => res.language);\n      const countedLanguageList = generateLanguageCountObj(languageList);\n      dispatch({\n        type: actionTypes.success,\n        payload: {\n          languageList: countedLanguageList\n        }\n      });\n    }).catch(() => {\n      dispatch({\n        type: actionTypes.error\n      });\n    });\n  }, []);\n\n  const generateLanguageCountObj = allLanguageList => {\n    const notNullLanguageList = allLanguageList.filter(language => language != null //null値を除外して新たな配列を取得\n    );\n    const uniqueLanguageList = [...new Set(notNullLanguageList)]; //重複を除外した配列を取得・・・new set()\n\n    return uniqueLanguageList.map(item => {\n      return {\n        language: item,\n        count: allLanguageList.filter(language => language === item).length\n      };\n    });\n  }; //   const sortedLanguageList = () =>\n  //     state.languageList.sort(\n  //       (firstLang, nextLang) => nextLang.count - firstLang.count\n  //     );\n  //   const converseCountToPercentage = (count) => {\n  //     if (count > 10) {\n  //       return 100;\n  //     }\n  //     return count * 10;\n  //   };\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"skills\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"heading\",\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Skills\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"skills-container\",\n        children: [fetchRequestState === requestStates.loading && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"description\",\n          children: \"\\u53D6\\u5F97\\u4E2D...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 15\n        }, this), fetchRequestState === requestStates.success && sortedLanguageList().map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"skill-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"description\",\n            children: /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: item.language\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 45\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 18\n          }, this), /*#__PURE__*/_jsxDEV(Circle, {\n            animate: true,\n            progress: converseCountToPercentage(item.count)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 18\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 16\n        }, this)), fetchRequestState === requestStates.error && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"description\",\n          children: \"\\u30A8\\u30E9\\u30FC\\u304C\\u767A\\u751F\\u3057\\u307E\\u3057\\u305F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Skills, \"r88o+6ku0hNP6LbQJUvNrNlBQYk=\", false, function () {\n  return [useSkills];\n});\n\n_c = Skills;\n\nvar _c;\n\n$RefreshReg$(_c, \"Skills\");","map":{"version":3,"sources":["/Users/daideguchi/Desktop/G's _Academy/課題/api_work/react-portfolio-site/src/components/Skills.jsx"],"names":["Circle","requestStates","useSkills","Skills","sortedLanguageList","fetchRequestState","converseCountToPercentage","useEffect","dispatch","type","actionTypes","fetch","axios","get","then","response","languageList","data","map","res","language","countedLanguageList","generateLanguageCountObj","success","payload","catch","error","allLanguageList","notNullLanguageList","filter","uniqueLanguageList","Set","item","count","length","loading","index"],"mappings":"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","sourcesContent":["import Circle from \"react-circle\";\n\nimport { requestStates } from \"../constants\";\nimport { useSkills } from \"../customHooks/useSkills\";\n\nexport const Skills = () => {\n  const [sortedLanguageList, fetchRequestState, converseCountToPercentage] =\n    useSkills();\n\n  useEffect(() => {\n    dispatch({ type: actionTypes.fetch });\n    axios\n      .get(\"https://api.github.com/users/daideguchi/repos\")\n      .then((response) => {\n        const languageList = response.data.map((res) => res.language);\n        const countedLanguageList = generateLanguageCountObj(languageList);\n        dispatch({\n          type: actionTypes.success,\n          payload: { languageList: countedLanguageList },\n        });\n      })\n      .catch(() => {\n        dispatch({ type: actionTypes.error });\n      });\n  }, []);\n\n  const generateLanguageCountObj = (allLanguageList) => {\n    const notNullLanguageList = allLanguageList.filter(\n      (language) => language != null //null値を除外して新たな配列を取得\n    );\n    const uniqueLanguageList = [...new Set(notNullLanguageList)]; //重複を除外した配列を取得・・・new set()\n    return uniqueLanguageList.map((item) => {\n      return {\n        language: item,\n        count: allLanguageList.filter((language) => language === item).length,\n      };\n    });\n  };\n\n//   const sortedLanguageList = () =>\n//     state.languageList.sort(\n//       (firstLang, nextLang) => nextLang.count - firstLang.count\n//     );\n\n//   const converseCountToPercentage = (count) => {\n//     if (count > 10) {\n//       return 100;\n//     }\n//     return count * 10;\n//   };\n\n  return (\n    <div id=\"skills\">\n      <div className=\"container\">\n        <div className=\"heading\">\n          <h2>Skills</h2>\n        </div>\n        <div className=\"skills-container\">\n          {\n            fetchRequestState === requestStates.loading && (\n              <p className=\"description\">取得中...</p>\n            )\n          }\n          {\n           fetchRequestState === requestStates.success && (\n              sortedLanguageList().map((item, index) => (\n               <div className=\"skill-item\" key={index}>\n                 <p className=\"description\"><strong>{item.language}</strong></p>\n                 <Circle\n                   animate\n                   progress={converseCountToPercentage(item.count)}\n                 />\n               </div>\n             ))\n           )\n         }\n          {\n            fetchRequestState === requestStates.error && (\n              <p className=\"description\">エラーが発生しました</p>\n            )\n          }\n        </div>\n      </div>\n    </div>\n  );\n}"]},"metadata":{},"sourceType":"module"}