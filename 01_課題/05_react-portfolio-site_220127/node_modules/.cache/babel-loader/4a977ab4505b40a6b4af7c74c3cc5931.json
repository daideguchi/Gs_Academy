{"ast":null,"code":"import _toConsumableArray from\"/Users/daideguchi/Desktop/G's _Academy/\\u8AB2\\u984C/api_work/react-portfolio-site/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _slicedToArray from\"/Users/daideguchi/Desktop/G's _Academy/\\u8AB2\\u984C/api_work/react-portfolio-site/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import Circle from\"react-circle\";import{useEffect,useReducer}from\"react\";import axios from\"axios\";import{skillReducer,initialState,actionTypes}from\"../reducers/skillReducer\";import{requestStates}from\"../constants\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export var Skills=function Skills(){var _useReducer=useReducer(skillReducer,initialState),_useReducer2=_slicedToArray(_useReducer,2),state=_useReducer2[0],dispatch=_useReducer2[1];useEffect(function(){dispatch({type:actionTypes.fetch});axios.get(\"https://api.github.com/users/daideguchi/repos\").then(function(response){var languageList=response.data.map(function(res){return res.language;});var countedLanguageList=generateLanguageCountObj(languageList);dispatch({type:actionTypes.success,payload:{languageList:countedLanguageList}});}).catch(function(){dispatch({type:actionTypes.error});});},[]);var generateLanguageCountObj=function generateLanguageCountObj(allLanguageList){var notNullLanguageList=allLanguageList.filter(function(language){return language!=null;}//null値を除外して新たな配列を取得\n);var uniqueLanguageList=_toConsumableArray(new Set(notNullLanguageList));//重複を除外した配列を取得・・・new set()\nreturn uniqueLanguageList.map(function(item){return{language:item,count:allLanguageList.filter(function(language){return language===item;}).length};});};var sortedLanguageList=function sortedLanguageList(){return state.languageList.sort(function(firstLang,nextLang){return nextLang.count-firstLang.count;});};var converseCountToPercentage=function converseCountToPercentage(count){if(count>10){return 100;}return count*10;};return/*#__PURE__*/_jsx(\"div\",{id:\"skills\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"heading\",children:/*#__PURE__*/_jsx(\"h2\",{children:\"Skills\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"skills-container\",children:[\" \",state.requestState===requestStates.loading&&/*#__PURE__*/_jsx(\"p\",{className:\"description\",children:\"\\u53D6\\u5F97\\u4E2D...\"}),state.requestState===requestStates.success&&sortedLanguageList().map(function(item,index){return/*#__PURE__*/_jsxs(\"div\",{className:\"skill-item\",children:[/*#__PURE__*/_jsx(\"p\",{className:\"description\",children:/*#__PURE__*/_jsx(\"strong\",{children:item.language})}),/*#__PURE__*/_jsx(Circle,{animate:true,progress:converseCountToPercentage(item.count)})]},index);}),state.requestState===requestStates.error&&/*#__PURE__*/_jsx(\"p\",{className:\"description\",children:\"\\u30A8\\u30E9\\u30FC\\u304C\\u767A\\u751F\\u3057\\u307E\\u3057\\u305F\"})]})]})});};","map":{"version":3,"sources":["/Users/daideguchi/Desktop/G's _Academy/課題/api_work/react-portfolio-site/src/components/Skills.jsx"],"names":["Circle","useEffect","useReducer","axios","skillReducer","initialState","actionTypes","requestStates","Skills","state","dispatch","type","fetch","get","then","response","languageList","data","map","res","language","countedLanguageList","generateLanguageCountObj","success","payload","catch","error","allLanguageList","notNullLanguageList","filter","uniqueLanguageList","Set","item","count","length","sortedLanguageList","sort","firstLang","nextLang","converseCountToPercentage","requestState","loading","index"],"mappings":"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","sourcesContent":["import Circle from \"react-circle\";\n\nimport { useEffect, useReducer } from \"react\";\n\nimport axios from \"axios\";\nimport {\n  skillReducer,\n  initialState,\n  actionTypes,\n} from \"../reducers/skillReducer\";\nimport { requestStates } from \"../constants\";\n\n\nexport const Skills = () => {\n  const [state, dispatch] = useReducer(skillReducer, initialState);\n\n  useEffect(() => {\n    dispatch({ type: actionTypes.fetch });\n    axios\n      .get(\"https://api.github.com/users/daideguchi/repos\")\n      .then((response) => {\n        const languageList = response.data.map((res) => res.language);\n        const countedLanguageList = generateLanguageCountObj(languageList);\n        dispatch({\n          type: actionTypes.success,\n          payload: { languageList: countedLanguageList },\n        });\n      })\n      .catch(() => {\n        dispatch({ type: actionTypes.error });\n      });\n  }, []);\n\n  const generateLanguageCountObj = (allLanguageList) => {\n    const notNullLanguageList = allLanguageList.filter(\n      (language) => language != null //null値を除外して新たな配列を取得\n    );\n    const uniqueLanguageList = [...new Set(notNullLanguageList)]; //重複を除外した配列を取得・・・new set()\n    return uniqueLanguageList.map((item) => {\n      return {\n        language: item,\n        count: allLanguageList.filter((language) => language === item).length,\n      };\n    });\n  };\n    \n     const sortedLanguageList = () =>\n       state.languageList.sort(\n         (firstLang, nextLang) => nextLang.count - firstLang.count\n       );\n    \n     const converseCountToPercentage = (count) => {\n       if (count > 10) {\n         return 100;\n       }\n       return count * 10;\n     };\n\n  return (\n    <div id=\"skills\">\n      <div className=\"container\">\n        <div className=\"heading\">\n          <h2>Skills</h2>\n        </div>\n        <div className=\"skills-container\">\n          {\" \"}\n          {state.requestState === requestStates.loading && (\n            <p className=\"description\">取得中...</p>\n          )}\n          {state.requestState === requestStates.success &&\n            sortedLanguageList().map((item, index) => (\n              <div className=\"skill-item\" key={index}>\n                <p className=\"description\">\n                  <strong>{item.language}</strong>\n                </p>\n                <Circle\n                  animate\n                  progress={converseCountToPercentage(item.count)}\n                />\n              </div>\n            ))}\n          {state.requestState === requestStates.error && (\n            <p className=\"description\">エラーが発生しました</p>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}